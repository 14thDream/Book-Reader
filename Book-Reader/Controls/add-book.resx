<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema 

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="PictureBoxIcon.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        /9j/4AAQSkZJRgABAQEAAAAAAAD/2wBDAAUFBQUFBQUGBgUICAcICAsKCQkKCxEMDQwNDBEaEBMQEBMQ
        GhcbFhUWGxcpIBwcICkvJyUnLzkzMzlHREddXX3/2wBDAQUFBQUFBQUGBgUICAcICAsKCQkKCxEMDQwN
        DBEaEBMQEBMQGhcbFhUWGxcpIBwcICkvJyUnLzkzMzlHREddXX3/wgARCAIAAgADASIAAhEBAxEB/8QA
        GwABAQADAQEBAAAAAAAAAAAAAAcDBAYBBQL/xAAUAQEAAAAAAAAAAAAAAAAAAAAA/9oADAMBAAIQAxAA
        AALsgAADXNj88NzBQPhcwPp6WEe+AAAAAAAAAAAAAAAAA98Gbd+YOn+5PBZP1HenO7a+wAAAAAHk5Pt8
        TjAAAAAAAAAAAAAAAAAAAAAAAAGTteGFmTijHoAAHns4MHxwAAAAAAAAAAAAAAAAAAAAAAAAAAfY+OLL
        7OKOADWOc4XJjAAAAAAAAAAAAAAAAAAAAAAAAAAAAHdcLkLE19gcJ3MfMYAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAOr7uO2A56edPzAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAoc86c+X8zNhAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAH0/mZzD4AAAAAAAAAAAAAAAzGFmwgAAAAAAAAAAAAAD3wAAAAAAAAAAAAAAMmPujb6EH
        PdCI7j7rhQAAAAAAAAAAAAAAAAAAAAAAAAAAABWJPWzbABoyetyQAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        VuSVs2wAakkrckAAAAAAAAAAAAAAAAAAAAAAAAAAAAFbklbNsAGpJK3JAAAAAAAAAAAAAAAAAAAAAAAA
        AAAABW5JWzbABqSStyQAAAAAAAAAAAAAAAAAAAAAAAAAAAAVuSVs2wAakkrckAAAAAAAAAAAAAAAAAAA
        AAADJ3ZwCxZCMrMIyswjKzCMrMI3Xc4AAwSKyCMrKI0sojSyiNLKI0suIj7vuFMYAAAAAAAAAAAAAAAK
        D0vnoAAAAAAAAAAAAAA5npvCNAAAAAAAAAAAAAAAAsOXjOzAAAAAAAAAAAAAAGPJxpxYAAAAAAAAAAAA
        AAAPeo5YUzLLhUUuFRS4VFLhUUuFT+nGa4bQAHzNmRlRS4VFLhUUuFRS4VHHMh1fK+AAAAAAAAAAAAAA
        AAAAAAAABW5JWzbABqSStyQAAAAAAAAAAAAAAAAAAAAAAAAAAAAVuSVs2wAakkrckAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAFbklbNsAGpJK3JAAAAAAAAAAAAAAAAAAAAAAAAAAAABW5JWzbABqSStyQAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAVuSVY+gADUklWlIAAAAAAAAAAAAAAAAAAAAAAAAAAAA6/kPSyuK6k3Gnyx+eQ9
        8AAAAAAAAAAAAAAD3wAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAHplw/T+YAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAM+D6Z9TmKHPAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAB1HL0Q6CP2LhDlAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAZLBw3djX2BHcfdcKAAAAAAAAAAAAAAAAAAAAAAAAAAAAMmPujo9kAE4o/hGn2PjgAAAAA
        AAAAAAAAAAAAAAAAAAAAA+wZ6P56AAAeTmjiMu64kxgAAAAAAAAAAAAAAAAAAAAAAAMnbHxKN6AAAAAG
        vsDhOYsX5I2onwjmH09MwPfAAAAAAAAAAAAAAAAAenjPuHzHUfbOA6fuf0a+wAAAH//EAAL/2gAMAwEA
        AgADAAAAIfPPOJHPPPPPPPPPPPPPPPPPPPPPGNPPPPPNHPPPPPPPPPPPPPPPPPPPPPPPPPMPPPLHPPPP
        PPPPPPPPPPPPPPPPPPPPPPLHPPHPPPPPPPPPPPPPPPPPPPPPPPPPPPPLNJPPPPPPPPPPPPPPPPPPPPPP
        PPPPPPPPGPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPOPPPPPPP
        PPPPPPPPONPPPPPPPPPPPPPPPPPPPPPPPPPPPPPOHPNPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPP
        PPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPP
        PPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPOMMMMMHPPLMMMMN
        NPPPPPPPPPPPPPPPPHPPPPPPPPPPPPPPKPPPPPPPPPPPPPPPPNPPPPPPPPPPPPPPKPPPPPPPPPPPPPPP
        PHLDDDDPPPPDDDDHDPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPP
        PPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPP
        PPPPPPPOPPNPPPPPPPPPPPPPPPPPPPPPPPPPPPPKNOFPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPP
        PPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPLPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPKGPPPPPP
        PPPPPPPPPPPPPPPPPPPPPPPPJLNPPPPPPPPPPPPPPPPPPPPPPPPPPPPOPPONPPPPPPPPPPPPPPPPPPPP
        PPPPPPOPPPPPNPPPPPPPPPPPPPPPPPPPPPPPPOPPPPPPLONOPPPPPPPPPPPPPPPPPPNNJHPPPP/EACkQ
        AAEEAAYCAQUBAQEAAAAAAAMBAgQFAAYTIDVQERIWEBQhMEAkMWD/2gAIAQEAAQcC/SaSCM32k5pgi8ob
        NU9+CXFoXDpEh+PKr0flUw2RIZgdxaCwHNU9mI2aYJfCAkgkt9v4JlhEgM9p2aZJfLSFKZyv6wZSBcj4
        OaZIvDYdhEns9v2KqIiraZmaz2EQpDPV/YDKQL0fV5mR/qJFRURf0nOKMJxbe8NYKo+0qLw1eqDAcUkT
        C7znFGE8ttbFsy9vU2xawuAHFJEwu1VREVby3WwNp9xR2615tNFRURdmZrT0T7Huss2nu37H62ExkCIU
        5SPMR5O6EV4SMJXzGTogj/TNM7Vksi95ladpSXxcSTtjAMYpHGIQneCI4JRkjHbJAE2aZOlBYHvsrSdS
        C8Oaje89gu+yqb0nvFcE1bSa7vqYmlaQnSHe5zu76O70kAcv/e/T8KnQMAYuHgMLvRCIYjB1mXI0ZrXo
        iInhURU8WeXI0lrnlEQJHj7rKsBEG+bszVARRsm91TtRlXBTZcNR9XOTuqrjYG2142f3dVxsDba8bP7u
        q42BtteNn93VcbA22vGz+7quNgbbXjZ/d1XGwNtrxs/u6rjYG2142f3dVxsDba8bP7uq42BtteNn901q
        uVGwBODCiD2TxuNBljVFaqp1ghEORo6/K4BIj2Q4gk8aIcaIcaIcaIcaIcaIcaIcaIcaIcIMbfzuUQnL
        50AY0AY0AY0AY0AY0AY0AY0AY0AYJChlTxYZXARFeURAkcPoMs1yBj/d/wB2Z65po/3nQAGggiH/AHHG
        hgGH0EMySIscv90syR4sgvQZZtWs/wAP92ZrRrv8PQ1+Zzx0QY8yVL0x8hp8fIafHyGnx8hp8fIafHyG
        nx8hp8fIafHyGnwy9qSORu599UscrfkNPj5DT4+Q0+PkNPj5DT4+Q0+PkNPj5DT4+Q0+H5jqWJiwzOc6
        KPrqxVdXQV2Waq2unL3VVxsDba8bP7uq42BtteNn93VcbA22vGz+7quNgbbXjZ/d1XGwNtrxs/u6rjYG
        2142f3dVxsDba8bP7uq42BtteNn93VcbA22vGz+7pCIWrhrsuyIKrmL3WWLJonuh7Mz2TSvbD7uszOo2
        tEK1rTJ5La1oU82eZ1I1wv8Azy/he/T8qmJDfSQdvfR2+8gDbgelaTW99TD1bSE3NQfSewvfZVD7z3lz
        TG1ILDd9laNpQXmkgbJAYJRuCQg+8ENxijFHC2MAIcZpg6UlkrvMrQdWS+V9LCGydEKAo3hI8fdCE8xG
        DgRGQIggfXM1X7t++7rLNX6N++2KiKipeVC15tTuKOoWwNqIiIiJtOAUkTxW1SWsL29TUlsy4AAUYTBb
        zgFJE8VvRmr1UnaVFGawVCAAKMJgv0qiKipaZZa/2KURAvVnYCEQz2sq8soz1KiIiIn7JkCJOZ6zsrSR
        eXEEULlZ1gxEM5GQcrSS+HQ4ESAz1/gNHBJb6ycrQC+VNlWezBKa0Fh0eQzHhU6Pwq4bHkPwOmtC4DlW
        e/EbK0EX5BGBGb6/p//EAAL/2gAMAwEAAgADAAAAEPPPPPHHHPPPPPPPPPPPPPPPPLLLENPPPPPOHPPP
        PPPPPPPPPPPPPPPPPPPPPHPPPPOHPPPPPPPPPPPPPPPPPPPPPPPPPPLNPPFPPPPPPPPPPPPPPPPPPPPP
        PPPPPPPLNIPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPNPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPHPPPPPP
        PPPPPPPPPPPPPPPPPPPPPPPPOHPPPPPPPPPPPPPPONPPPPPPPPPPPPPPLPPPPPPPPPPPPPPPLDPPPPPP
        PPPPPPPPPPPPPPPPPPPPPPPOPPFPPPPPPPPPPPPPPPPPPPPPPPPPPPPKPPFPPPPPPPPPPPPPPPPPPPPP
        PPPPPPPKPPFPPPPPPPPPPPPPPPPPPPPPPPPPPPPKPPFPPPPPPPPPPPPPPPPPPPPPPPPPPPPKPPFPPPPP
        PPPPPPPPPPPPPPPPPPOMMMMJPPCPPPPPMPPPPPPPPPPPPPPPPFPPPPPPPPPPPPPPPPPPPPPPPPPPPPPP
        PPPPPPPPPPPPPPPPLPPPPPPPPPPPPPPPPHPPPPPOPPNPPPPPHPPPPPPPPPPPPPPPPPPPPPPKPPFPPPPP
        PPPPPPPPPPPPPPPPPPPPPPPKPPFPPPPPPPPPPPPPPPPPPPPPPPPPPPPKPPFPPPPPPPPPPPPPPPPPPPPP
        PPPPPPPKPPFPPPPPPPPPPPPPPPPPPPPPPPPPPPPKPPFPPPPPPPPPPPPPPPPPPPPPPPPPPPPLMMHPPPPP
        PPPPPPPPPNPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPONPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPLNPPPPPP
        PPPPPPPPPPPPPPPPPPPPPPPPKPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPLFPPPPPPPPPPPPPPPPPPPPP
        PPPPPPPPHPPNPPPPPPPPPPPPPPPPPPPPPPPPPPOFPPPHPPPPPPPPPPPPPPPPPPPPPPPPPODPPPPPPHPO
        NPPPPPPPPPPPPPPPPONNHPPPPP/EABQRAQAAAAAAAAAAAAAAAAAAAKD/2gAIAQIBAT8AAB//xAAUEQEA
        AAAAAAAAAAAAAAAAAACg/9oACAEDAQE/AAAf/8QAPhAAAgACBAcMCQUBAQAAAAAAAQIAAxEhULEEEyBB
        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
        Fw399rYwNvP3qRmvS//Z
</value>
  </data>
</root>